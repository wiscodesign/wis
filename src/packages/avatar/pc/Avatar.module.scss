@use '@/packages/themes/tool.scss' as tool;
@use '@/packages/themes/style.scss' as style;

@mixin avatar-style($style, $color) {
  @include style.component-style($component: 'avatar', $style: #{$style}-#{$color});
}

@mixin avatar-item() {
  @include style.component-style($component: 'avatar', $widget: 'group', $enable-background: false, $enable-font: false);
}

@mixin color($style) {
  @each $color in 'gray', 'blue', 'purple', 'orange', 'red', 'green' {
    &[data-color="#{$color}"] {
      @include avatar-style($style, $color);
    }
  }
}

.avatar {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: var(--w-common-font-weight-bold);

  &:not([data-image]) {
    border: var(--w-common-spacing-scale-1) solid transparent;
  }

  &[data-shape="circle"] {
    border-radius: 50%;
  }

  &[data-shape="square"] {
    border-radius: var(--w-common-border-radius-lg);
  }

  &[data-color-schema="light"] {
    @include color($style: 'light')
  }

  &[data-color-schema="dark"] {
    @include color($style: 'dark')
  }

  &[data-color-schema="outline"] {
    @include color($style: 'outline')
  }

  &[data-size="lg"] {
    width: 56px;
    height: 56px;

    @include tool.font-size(var(--w-common-font-size-text-xxl));

    > svg {
      stroke-width: var(--w-common-border-width-icon-md);
    }
  }

  &[data-size="md"] {
    width: 40px;
    height: 40px;

    @include tool.font-size(var(--w-common-font-size-text-md));

    > svg {
      stroke-width: var(--w-common-border-width-icon-md);
    }
  }

  &[data-size="sm"] {
    width: 32px;
    height: 32px;

    @include tool.font-size(var(--w-common-font-size-text-base));

    > svg {
      stroke-width: var(--w-common-border-width-icon-sm);
    }
  }

  &[data-size="xs"] {
    width: 24px;
    height: 24px;

    @include tool.font-size(var(--w-common-font-size-text-sm));

    > svg {
      stroke-width: var(--w-common-border-width-icon-sm);
    }
  }
}

.image {
  width: 100%;
  height: 100%;
}

.group {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  overflow: hidden;
  width: 100%;

  &[data-hidden] {
    visibility: hidden;
  }
}

.item {
  flex: 0 0 auto;

  &[data-color-schema][data-color] {
    border: var(--w-common-border-width-md) solid transparent; 
    @include avatar-item();
  }

  &[data-size="lg"] {
    &:not(:first-child) {
      margin-left: calc(var(--w-common-spacing-common-lg) * -1);
    }
  }
  &[data-size="md"] {
    &:not(:first-child) {
      margin-left: calc(var(--w-common-spacing-common-md) * -1);
    }
  }
  &[data-size="sm"] {
    &:not(:first-child) {
      margin-left: calc(var(--w-common-spacing-common-sm) * -1);
    }
  }
  &[data-size="xs"] {
    &:not(:first-child) {
      margin-left: calc(var(--w-common-spacing-common-xs) * -1);
    }
  }
}